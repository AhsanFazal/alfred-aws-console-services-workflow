([]*aw.Item) (len=2) {
  (*aw.Item)({
    title: (string) (len=11) "elasticache",
    subtitle: (*string)((len=36) "ðŸ—‚ ElastiCache â€“ In-Memory Cache"),
    match: (*string)((len=23) "elasticache ElastiCache"),
    uid: (*string)((len=11) "elasticache"),
    autocomplete: (*string)((len=12) "elasticache "),
    arg: ([]string) (len=1) {
      (string) (len=75) "https://us-west-2.console.aws.amazon.com/elasticache/home?region=us-west-2#"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=22) "images/elasticache.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  }),
  (*aw.Item)({
    title: (string) (len=3) "oss",
    subtitle: (*string)((len=127) "ðŸ—‚ OpenSearch Service (OSS) â€“ Run open-source OpenSearch or Elasticsearch using Managed Clusters or Serverless deployments."),
    match: (*string)((len=32) "oss ess elasticsearch opensearch"),
    uid: (*string)((len=3) "oss"),
    autocomplete: (*string)((len=4) "oss "),
    arg: ([]string) (len=1) {
      (string) (len=87) "https://us-west-2.console.aws.amazon.com/aos/home?region=us-west-2#opensearch/dashboard"
    },
    valid: (bool) true,
    file: (bool) false,
    copytext: (*string)(<nil>),
    largetype: (*string)(<nil>),
    ql: (*string)(<nil>),
    vars: (map[string]string) (len=1) {
      (string) (len=6) "action": (string) (len=8) "open-url"
    },
    mods: (map[string]*aw.Modifier) (len=1) {
      (string) (len=3) "cmd": (*aw.Modifier)({
        Key: (string) (len=3) "cmd",
        arg: ([]string) <nil>,
        subtitle: (*string)((len=21) "Copy URL to clipboard"),
        valid: (bool) false,
        icon: (*aw.Icon)(<nil>),
        vars: (map[string]string) (len=1) {
          (string) (len=6) "action": (string) (len=17) "copy-to-clipboard"
        }
      })
    },
    actions: (map[string][]string) <nil>,
    icon: (*aw.Icon)({
      Value: (string) (len=14) "images/oss.png",
      Type: (aw.IconType) ""
    }),
    noUID: (bool) false
  })
}
