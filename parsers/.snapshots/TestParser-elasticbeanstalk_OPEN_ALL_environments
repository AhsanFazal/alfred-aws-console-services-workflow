(*parsers.Query)({
  RawQuery: (string) (len=38) "elasticbeanstalk OPEN_ALL environments",
  Service: (*awsworkflow.AwsService)({
    Id: (string) (len=16) "elasticbeanstalk",
    Name: (string) (len=17) "Elastic Beanstalk",
    ShortName: (string) "",
    Description: (string) (len=23) "Run and Manage Web Apps",
    Url: (string) (len=22) "/elasticbeanstalk/home",
    HomeID: (string) "",
    ExtraSearchTerms: ([]string) <nil>,
    SubServices: ([]awsworkflow.AwsService) (len=2) {
      (awsworkflow.AwsService) {
        Id: (string) (len=12) "environments",
        Name: (string) (len=12) "Environments",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=36) "/elasticbeanstalk/home#/environments",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=12) "applications",
        Name: (string) (len=12) "Applications",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=36) "/elasticbeanstalk/home#/applications",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      }
    },
    HasGlobalRegion: (bool) false
  }),
  SubService: (*awsworkflow.AwsService)({
    Id: (string) (len=12) "environments",
    Name: (string) (len=12) "Environments",
    ShortName: (string) "",
    Description: (string) "",
    Url: (string) (len=36) "/elasticbeanstalk/home#/environments",
    HomeID: (string) "",
    ExtraSearchTerms: ([]string) <nil>,
    SubServices: ([]awsworkflow.AwsService) <nil>,
    HasGlobalRegion: (bool) false
  }),
  HasTrailingWhitespace: (bool) false,
  HasOpenAll: (bool) true,
  HasDefaultSearchAlias: (bool) false,
  regionOverride: (*awsconfig.Region)(<nil>),
  RegionQuery: (*string)(<nil>),
  ProfileOverride: (*awsconfig.Profile)(<nil>),
  ProfileQuery: (*string)(<nil>),
  RemainingQuery: (string) ""
})
