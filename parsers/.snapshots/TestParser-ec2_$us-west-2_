(*parsers.Query)({
  Service: (*awsworkflow.AwsService)({
    Id: (string) (len=3) "ec2",
    Name: (string) (len=21) "Elastic Cloud Compute",
    ShortName: (string) (len=3) "EC2",
    Description: (string) (len=28) "Virtual Servers in the Cloud",
    Url: (string) (len=9) "/ec2/home",
    HomeID: (string) "",
    ExtraSearchTerms: ([]string) <nil>,
    SubServices: ([]awsworkflow.AwsService) (len=25) {
      (awsworkflow.AwsService) {
        Id: (string) (len=6) "events",
        Name: (string) (len=6) "Events",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=17) "/ec2/home#Events:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=4) "tags",
        Name: (string) (len=4) "Tags",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=15) "/ec2/home#Tags:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=6) "limits",
        Name: (string) (len=6) "Limits",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=17) "/ec2/home#Limits:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=9) "instances",
        Name: (string) (len=9) "Instances",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=23) "/ec2/v2/home#Instances:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=13) "instancetypes",
        Name: (string) (len=14) "Instance Types",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=27) "/ec2/v2/home#InstanceTypes:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=15) "launchtemplates",
        Name: (string) (len=16) "Launch Templates",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=26) "/ec2/home#LaunchTemplates:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=12) "spotrequests",
        Name: (string) (len=13) "Spot Requests",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=6) "/ec2sp",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=12) "savingsplans",
        Name: (string) (len=13) "Savings Plans",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=23) "/ec2/home#SavingsPlans:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=17) "reservedinstances",
        Name: (string) (len=18) "Reserved Instances",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=28) "/ec2/home#ReservedInstances:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=14) "dedicatedhosts",
        Name: (string) (len=15) "Dedicated Hosts",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=16) "/ec2/home#Hosts:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=18) "scheduledinstances",
        Name: (string) (len=19) "Scheduled Instances",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=17) "/ec2sp/v2/si/home",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=20) "capacityreservations",
        Name: (string) (len=21) "Capacity Reservations",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=32) "/ec2sp/v2/home/#/cr/reservations",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=4) "amis",
        Name: (string) (len=4) "AMIs",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=17) "/ec2/home#Images:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=7) "volumes",
        Name: (string) (len=6) "Volume",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=18) "/ec2/home#Volumes:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=9) "snapshots",
        Name: (string) (len=9) "Snapshots",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=20) "/ec2/home#Snapshots:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=16) "lifecyclemanager",
        Name: (string) (len=17) "Lifecycle Manager",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=20) "/ec2/home#Lifecycle:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=14) "securitygroups",
        Name: (string) (len=15) "Security Groups",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=28) "/ec2/v2/home#SecurityGroups:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=10) "elasticips",
        Name: (string) (len=11) "Elastic IPs",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=20) "/ec2/home#Addresses:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=15) "placementgroups",
        Name: (string) (len=16) "Placement Groups",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=26) "/ec2/home#PlacementGroups:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=8) "keypairs",
        Name: (string) (len=9) "Key Pairs",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=19) "/ec2/home#KeyPairs:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=17) "networkinterfaces",
        Name: (string) (len=18) "Network Interfaces",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=14) "/ec2/home#NIC:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=13) "loadbalancers",
        Name: (string) (len=14) "Load Balancers",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=24) "/ec2/home#LoadBalancers:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=12) "targetgroups",
        Name: (string) (len=13) "Target Groups",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=23) "/ec2/home#TargetGroups:",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=13) "launchconfigs",
        Name: (string) (len=21) "Launch Configurations",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=24) "/ec2autoscaling/home#/lc",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      },
      (awsworkflow.AwsService) {
        Id: (string) (len=17) "autoscalinggroups",
        Name: (string) (len=19) "Auto Scaling Groups",
        ShortName: (string) "",
        Description: (string) "",
        Url: (string) (len=29) "/ec2autoscaling/home#/details",
        HomeID: (string) "",
        ExtraSearchTerms: ([]string) <nil>,
        SubServices: ([]awsworkflow.AwsService) <nil>,
        HasGlobalRegion: (bool) false
      }
    },
    HasGlobalRegion: (bool) false
  }),
  SubService: (*awsworkflow.AwsService)(<nil>),
  HasTrailingWhitespace: (bool) true,
  HasOpenAll: (bool) false,
  HasDefaultSearchAlias: (bool) false,
  RegionOverride: (*awsworkflow.Region)({
    Name: (string) (len=9) "us-west-2",
    Description: (string) (len=16) "US West (Oregon)"
  }),
  RegionQuery: (*string)(<nil>),
  RemainingQuery: (string) ""
})
